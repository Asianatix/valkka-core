# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_valkka_core', [dirname(__file__)])
        except ImportError:
            import _valkka_core
            return _valkka_core
        if fp is not None:
            try:
                _mod = imp.load_module('_valkka_core', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _valkka_core = swig_import_helper()
    del swig_import_helper
else:
    import _valkka_core
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def new_intp():
    return _valkka_core.new_intp()
new_intp = _valkka_core.new_intp

def copy_intp(value):
    return _valkka_core.copy_intp(value)
copy_intp = _valkka_core.copy_intp

def delete_intp(obj):
    return _valkka_core.delete_intp(obj)
delete_intp = _valkka_core.delete_intp

def intp_assign(obj, value):
    return _valkka_core.intp_assign(obj, value)
intp_assign = _valkka_core.intp_assign

def intp_value(obj):
    return _valkka_core.intp_value(obj)
intp_value = _valkka_core.intp_value

_valkka_core.X_PROTOCOL_swigconstant(_valkka_core)
X_PROTOCOL = _valkka_core.X_PROTOCOL

_valkka_core.X_PROTOCOL_REVISION_swigconstant(_valkka_core)
X_PROTOCOL_REVISION = _valkka_core.X_PROTOCOL_REVISION

_valkka_core._None_swigconstant(_valkka_core)
_None = _valkka_core._None

_valkka_core.ParentRelative_swigconstant(_valkka_core)
ParentRelative = _valkka_core.ParentRelative

_valkka_core.CopyFromParent_swigconstant(_valkka_core)
CopyFromParent = _valkka_core.CopyFromParent

_valkka_core.PointerWindow_swigconstant(_valkka_core)
PointerWindow = _valkka_core.PointerWindow

_valkka_core.InputFocus_swigconstant(_valkka_core)
InputFocus = _valkka_core.InputFocus

_valkka_core.PointerRoot_swigconstant(_valkka_core)
PointerRoot = _valkka_core.PointerRoot

_valkka_core.AnyPropertyType_swigconstant(_valkka_core)
AnyPropertyType = _valkka_core.AnyPropertyType

_valkka_core.AnyKey_swigconstant(_valkka_core)
AnyKey = _valkka_core.AnyKey

_valkka_core.AnyButton_swigconstant(_valkka_core)
AnyButton = _valkka_core.AnyButton

_valkka_core.AllTemporary_swigconstant(_valkka_core)
AllTemporary = _valkka_core.AllTemporary

_valkka_core.CurrentTime_swigconstant(_valkka_core)
CurrentTime = _valkka_core.CurrentTime

_valkka_core.NoSymbol_swigconstant(_valkka_core)
NoSymbol = _valkka_core.NoSymbol

_valkka_core.NoEventMask_swigconstant(_valkka_core)
NoEventMask = _valkka_core.NoEventMask

_valkka_core.KeyPressMask_swigconstant(_valkka_core)
KeyPressMask = _valkka_core.KeyPressMask

_valkka_core.KeyReleaseMask_swigconstant(_valkka_core)
KeyReleaseMask = _valkka_core.KeyReleaseMask

_valkka_core.ButtonPressMask_swigconstant(_valkka_core)
ButtonPressMask = _valkka_core.ButtonPressMask

_valkka_core.ButtonReleaseMask_swigconstant(_valkka_core)
ButtonReleaseMask = _valkka_core.ButtonReleaseMask

_valkka_core.EnterWindowMask_swigconstant(_valkka_core)
EnterWindowMask = _valkka_core.EnterWindowMask

_valkka_core.LeaveWindowMask_swigconstant(_valkka_core)
LeaveWindowMask = _valkka_core.LeaveWindowMask

_valkka_core.PointerMotionMask_swigconstant(_valkka_core)
PointerMotionMask = _valkka_core.PointerMotionMask

_valkka_core.PointerMotionHintMask_swigconstant(_valkka_core)
PointerMotionHintMask = _valkka_core.PointerMotionHintMask

_valkka_core.Button1MotionMask_swigconstant(_valkka_core)
Button1MotionMask = _valkka_core.Button1MotionMask

_valkka_core.Button2MotionMask_swigconstant(_valkka_core)
Button2MotionMask = _valkka_core.Button2MotionMask

_valkka_core.Button3MotionMask_swigconstant(_valkka_core)
Button3MotionMask = _valkka_core.Button3MotionMask

_valkka_core.Button4MotionMask_swigconstant(_valkka_core)
Button4MotionMask = _valkka_core.Button4MotionMask

_valkka_core.Button5MotionMask_swigconstant(_valkka_core)
Button5MotionMask = _valkka_core.Button5MotionMask

_valkka_core.ButtonMotionMask_swigconstant(_valkka_core)
ButtonMotionMask = _valkka_core.ButtonMotionMask

_valkka_core.KeymapStateMask_swigconstant(_valkka_core)
KeymapStateMask = _valkka_core.KeymapStateMask

_valkka_core.ExposureMask_swigconstant(_valkka_core)
ExposureMask = _valkka_core.ExposureMask

_valkka_core.VisibilityChangeMask_swigconstant(_valkka_core)
VisibilityChangeMask = _valkka_core.VisibilityChangeMask

_valkka_core.StructureNotifyMask_swigconstant(_valkka_core)
StructureNotifyMask = _valkka_core.StructureNotifyMask

_valkka_core.ResizeRedirectMask_swigconstant(_valkka_core)
ResizeRedirectMask = _valkka_core.ResizeRedirectMask

_valkka_core.SubstructureNotifyMask_swigconstant(_valkka_core)
SubstructureNotifyMask = _valkka_core.SubstructureNotifyMask

_valkka_core.SubstructureRedirectMask_swigconstant(_valkka_core)
SubstructureRedirectMask = _valkka_core.SubstructureRedirectMask

_valkka_core.FocusChangeMask_swigconstant(_valkka_core)
FocusChangeMask = _valkka_core.FocusChangeMask

_valkka_core.PropertyChangeMask_swigconstant(_valkka_core)
PropertyChangeMask = _valkka_core.PropertyChangeMask

_valkka_core.ColormapChangeMask_swigconstant(_valkka_core)
ColormapChangeMask = _valkka_core.ColormapChangeMask

_valkka_core.OwnerGrabButtonMask_swigconstant(_valkka_core)
OwnerGrabButtonMask = _valkka_core.OwnerGrabButtonMask

_valkka_core.KeyPress_swigconstant(_valkka_core)
KeyPress = _valkka_core.KeyPress

_valkka_core.KeyRelease_swigconstant(_valkka_core)
KeyRelease = _valkka_core.KeyRelease

_valkka_core.ButtonPress_swigconstant(_valkka_core)
ButtonPress = _valkka_core.ButtonPress

_valkka_core.ButtonRelease_swigconstant(_valkka_core)
ButtonRelease = _valkka_core.ButtonRelease

_valkka_core.MotionNotify_swigconstant(_valkka_core)
MotionNotify = _valkka_core.MotionNotify

_valkka_core.EnterNotify_swigconstant(_valkka_core)
EnterNotify = _valkka_core.EnterNotify

_valkka_core.LeaveNotify_swigconstant(_valkka_core)
LeaveNotify = _valkka_core.LeaveNotify

_valkka_core.FocusIn_swigconstant(_valkka_core)
FocusIn = _valkka_core.FocusIn

_valkka_core.FocusOut_swigconstant(_valkka_core)
FocusOut = _valkka_core.FocusOut

_valkka_core.KeymapNotify_swigconstant(_valkka_core)
KeymapNotify = _valkka_core.KeymapNotify

_valkka_core.Expose_swigconstant(_valkka_core)
Expose = _valkka_core.Expose

_valkka_core.GraphicsExpose_swigconstant(_valkka_core)
GraphicsExpose = _valkka_core.GraphicsExpose

_valkka_core.NoExpose_swigconstant(_valkka_core)
NoExpose = _valkka_core.NoExpose

_valkka_core.VisibilityNotify_swigconstant(_valkka_core)
VisibilityNotify = _valkka_core.VisibilityNotify

_valkka_core.CreateNotify_swigconstant(_valkka_core)
CreateNotify = _valkka_core.CreateNotify

_valkka_core.DestroyNotify_swigconstant(_valkka_core)
DestroyNotify = _valkka_core.DestroyNotify

_valkka_core.UnmapNotify_swigconstant(_valkka_core)
UnmapNotify = _valkka_core.UnmapNotify

_valkka_core.MapNotify_swigconstant(_valkka_core)
MapNotify = _valkka_core.MapNotify

_valkka_core.MapRequest_swigconstant(_valkka_core)
MapRequest = _valkka_core.MapRequest

_valkka_core.ReparentNotify_swigconstant(_valkka_core)
ReparentNotify = _valkka_core.ReparentNotify

_valkka_core.ConfigureNotify_swigconstant(_valkka_core)
ConfigureNotify = _valkka_core.ConfigureNotify

_valkka_core.ConfigureRequest_swigconstant(_valkka_core)
ConfigureRequest = _valkka_core.ConfigureRequest

_valkka_core.GravityNotify_swigconstant(_valkka_core)
GravityNotify = _valkka_core.GravityNotify

_valkka_core.ResizeRequest_swigconstant(_valkka_core)
ResizeRequest = _valkka_core.ResizeRequest

_valkka_core.CirculateNotify_swigconstant(_valkka_core)
CirculateNotify = _valkka_core.CirculateNotify

_valkka_core.CirculateRequest_swigconstant(_valkka_core)
CirculateRequest = _valkka_core.CirculateRequest

_valkka_core.PropertyNotify_swigconstant(_valkka_core)
PropertyNotify = _valkka_core.PropertyNotify

_valkka_core.SelectionClear_swigconstant(_valkka_core)
SelectionClear = _valkka_core.SelectionClear

_valkka_core.SelectionRequest_swigconstant(_valkka_core)
SelectionRequest = _valkka_core.SelectionRequest

_valkka_core.SelectionNotify_swigconstant(_valkka_core)
SelectionNotify = _valkka_core.SelectionNotify

_valkka_core.ColormapNotify_swigconstant(_valkka_core)
ColormapNotify = _valkka_core.ColormapNotify

_valkka_core.ClientMessage_swigconstant(_valkka_core)
ClientMessage = _valkka_core.ClientMessage

_valkka_core.MappingNotify_swigconstant(_valkka_core)
MappingNotify = _valkka_core.MappingNotify

_valkka_core.GenericEvent_swigconstant(_valkka_core)
GenericEvent = _valkka_core.GenericEvent

_valkka_core.LASTEvent_swigconstant(_valkka_core)
LASTEvent = _valkka_core.LASTEvent

_valkka_core.ShiftMask_swigconstant(_valkka_core)
ShiftMask = _valkka_core.ShiftMask

_valkka_core.LockMask_swigconstant(_valkka_core)
LockMask = _valkka_core.LockMask

_valkka_core.ControlMask_swigconstant(_valkka_core)
ControlMask = _valkka_core.ControlMask

_valkka_core.Mod1Mask_swigconstant(_valkka_core)
Mod1Mask = _valkka_core.Mod1Mask

_valkka_core.Mod2Mask_swigconstant(_valkka_core)
Mod2Mask = _valkka_core.Mod2Mask

_valkka_core.Mod3Mask_swigconstant(_valkka_core)
Mod3Mask = _valkka_core.Mod3Mask

_valkka_core.Mod4Mask_swigconstant(_valkka_core)
Mod4Mask = _valkka_core.Mod4Mask

_valkka_core.Mod5Mask_swigconstant(_valkka_core)
Mod5Mask = _valkka_core.Mod5Mask

_valkka_core.ShiftMapIndex_swigconstant(_valkka_core)
ShiftMapIndex = _valkka_core.ShiftMapIndex

_valkka_core.LockMapIndex_swigconstant(_valkka_core)
LockMapIndex = _valkka_core.LockMapIndex

_valkka_core.ControlMapIndex_swigconstant(_valkka_core)
ControlMapIndex = _valkka_core.ControlMapIndex

_valkka_core.Mod1MapIndex_swigconstant(_valkka_core)
Mod1MapIndex = _valkka_core.Mod1MapIndex

_valkka_core.Mod2MapIndex_swigconstant(_valkka_core)
Mod2MapIndex = _valkka_core.Mod2MapIndex

_valkka_core.Mod3MapIndex_swigconstant(_valkka_core)
Mod3MapIndex = _valkka_core.Mod3MapIndex

_valkka_core.Mod4MapIndex_swigconstant(_valkka_core)
Mod4MapIndex = _valkka_core.Mod4MapIndex

_valkka_core.Mod5MapIndex_swigconstant(_valkka_core)
Mod5MapIndex = _valkka_core.Mod5MapIndex

_valkka_core.Button1Mask_swigconstant(_valkka_core)
Button1Mask = _valkka_core.Button1Mask

_valkka_core.Button2Mask_swigconstant(_valkka_core)
Button2Mask = _valkka_core.Button2Mask

_valkka_core.Button3Mask_swigconstant(_valkka_core)
Button3Mask = _valkka_core.Button3Mask

_valkka_core.Button4Mask_swigconstant(_valkka_core)
Button4Mask = _valkka_core.Button4Mask

_valkka_core.Button5Mask_swigconstant(_valkka_core)
Button5Mask = _valkka_core.Button5Mask

_valkka_core.AnyModifier_swigconstant(_valkka_core)
AnyModifier = _valkka_core.AnyModifier

_valkka_core.Button1_swigconstant(_valkka_core)
Button1 = _valkka_core.Button1

_valkka_core.Button2_swigconstant(_valkka_core)
Button2 = _valkka_core.Button2

_valkka_core.Button3_swigconstant(_valkka_core)
Button3 = _valkka_core.Button3

_valkka_core.Button4_swigconstant(_valkka_core)
Button4 = _valkka_core.Button4

_valkka_core.Button5_swigconstant(_valkka_core)
Button5 = _valkka_core.Button5

_valkka_core.NotifyNormal_swigconstant(_valkka_core)
NotifyNormal = _valkka_core.NotifyNormal

_valkka_core.NotifyGrab_swigconstant(_valkka_core)
NotifyGrab = _valkka_core.NotifyGrab

_valkka_core.NotifyUngrab_swigconstant(_valkka_core)
NotifyUngrab = _valkka_core.NotifyUngrab

_valkka_core.NotifyWhileGrabbed_swigconstant(_valkka_core)
NotifyWhileGrabbed = _valkka_core.NotifyWhileGrabbed

_valkka_core.NotifyHint_swigconstant(_valkka_core)
NotifyHint = _valkka_core.NotifyHint

_valkka_core.NotifyAncestor_swigconstant(_valkka_core)
NotifyAncestor = _valkka_core.NotifyAncestor

_valkka_core.NotifyVirtual_swigconstant(_valkka_core)
NotifyVirtual = _valkka_core.NotifyVirtual

_valkka_core.NotifyInferior_swigconstant(_valkka_core)
NotifyInferior = _valkka_core.NotifyInferior

_valkka_core.NotifyNonlinear_swigconstant(_valkka_core)
NotifyNonlinear = _valkka_core.NotifyNonlinear

_valkka_core.NotifyNonlinearVirtual_swigconstant(_valkka_core)
NotifyNonlinearVirtual = _valkka_core.NotifyNonlinearVirtual

_valkka_core.NotifyPointer_swigconstant(_valkka_core)
NotifyPointer = _valkka_core.NotifyPointer

_valkka_core.NotifyPointerRoot_swigconstant(_valkka_core)
NotifyPointerRoot = _valkka_core.NotifyPointerRoot

_valkka_core.NotifyDetailNone_swigconstant(_valkka_core)
NotifyDetailNone = _valkka_core.NotifyDetailNone

_valkka_core.VisibilityUnobscured_swigconstant(_valkka_core)
VisibilityUnobscured = _valkka_core.VisibilityUnobscured

_valkka_core.VisibilityPartiallyObscured_swigconstant(_valkka_core)
VisibilityPartiallyObscured = _valkka_core.VisibilityPartiallyObscured

_valkka_core.VisibilityFullyObscured_swigconstant(_valkka_core)
VisibilityFullyObscured = _valkka_core.VisibilityFullyObscured

_valkka_core.PlaceOnTop_swigconstant(_valkka_core)
PlaceOnTop = _valkka_core.PlaceOnTop

_valkka_core.PlaceOnBottom_swigconstant(_valkka_core)
PlaceOnBottom = _valkka_core.PlaceOnBottom

_valkka_core.FamilyInternet_swigconstant(_valkka_core)
FamilyInternet = _valkka_core.FamilyInternet

_valkka_core.FamilyDECnet_swigconstant(_valkka_core)
FamilyDECnet = _valkka_core.FamilyDECnet

_valkka_core.FamilyChaos_swigconstant(_valkka_core)
FamilyChaos = _valkka_core.FamilyChaos

_valkka_core.FamilyInternet6_swigconstant(_valkka_core)
FamilyInternet6 = _valkka_core.FamilyInternet6

_valkka_core.FamilyServerInterpreted_swigconstant(_valkka_core)
FamilyServerInterpreted = _valkka_core.FamilyServerInterpreted

_valkka_core.PropertyNewValue_swigconstant(_valkka_core)
PropertyNewValue = _valkka_core.PropertyNewValue

_valkka_core.PropertyDelete_swigconstant(_valkka_core)
PropertyDelete = _valkka_core.PropertyDelete

_valkka_core.ColormapUninstalled_swigconstant(_valkka_core)
ColormapUninstalled = _valkka_core.ColormapUninstalled

_valkka_core.ColormapInstalled_swigconstant(_valkka_core)
ColormapInstalled = _valkka_core.ColormapInstalled

_valkka_core.GrabModeSync_swigconstant(_valkka_core)
GrabModeSync = _valkka_core.GrabModeSync

_valkka_core.GrabModeAsync_swigconstant(_valkka_core)
GrabModeAsync = _valkka_core.GrabModeAsync

_valkka_core.GrabSuccess_swigconstant(_valkka_core)
GrabSuccess = _valkka_core.GrabSuccess

_valkka_core.AlreadyGrabbed_swigconstant(_valkka_core)
AlreadyGrabbed = _valkka_core.AlreadyGrabbed

_valkka_core.GrabInvalidTime_swigconstant(_valkka_core)
GrabInvalidTime = _valkka_core.GrabInvalidTime

_valkka_core.GrabNotViewable_swigconstant(_valkka_core)
GrabNotViewable = _valkka_core.GrabNotViewable

_valkka_core.GrabFrozen_swigconstant(_valkka_core)
GrabFrozen = _valkka_core.GrabFrozen

_valkka_core.AsyncPointer_swigconstant(_valkka_core)
AsyncPointer = _valkka_core.AsyncPointer

_valkka_core.SyncPointer_swigconstant(_valkka_core)
SyncPointer = _valkka_core.SyncPointer

_valkka_core.ReplayPointer_swigconstant(_valkka_core)
ReplayPointer = _valkka_core.ReplayPointer

_valkka_core.AsyncKeyboard_swigconstant(_valkka_core)
AsyncKeyboard = _valkka_core.AsyncKeyboard

_valkka_core.SyncKeyboard_swigconstant(_valkka_core)
SyncKeyboard = _valkka_core.SyncKeyboard

_valkka_core.ReplayKeyboard_swigconstant(_valkka_core)
ReplayKeyboard = _valkka_core.ReplayKeyboard

_valkka_core.AsyncBoth_swigconstant(_valkka_core)
AsyncBoth = _valkka_core.AsyncBoth

_valkka_core.SyncBoth_swigconstant(_valkka_core)
SyncBoth = _valkka_core.SyncBoth

_valkka_core.RevertToParent_swigconstant(_valkka_core)
RevertToParent = _valkka_core.RevertToParent

_valkka_core.Success_swigconstant(_valkka_core)
Success = _valkka_core.Success

_valkka_core.BadRequest_swigconstant(_valkka_core)
BadRequest = _valkka_core.BadRequest

_valkka_core.BadValue_swigconstant(_valkka_core)
BadValue = _valkka_core.BadValue

_valkka_core.BadWindow_swigconstant(_valkka_core)
BadWindow = _valkka_core.BadWindow

_valkka_core.BadPixmap_swigconstant(_valkka_core)
BadPixmap = _valkka_core.BadPixmap

_valkka_core.BadAtom_swigconstant(_valkka_core)
BadAtom = _valkka_core.BadAtom

_valkka_core.BadCursor_swigconstant(_valkka_core)
BadCursor = _valkka_core.BadCursor

_valkka_core.BadFont_swigconstant(_valkka_core)
BadFont = _valkka_core.BadFont

_valkka_core.BadMatch_swigconstant(_valkka_core)
BadMatch = _valkka_core.BadMatch

_valkka_core.BadDrawable_swigconstant(_valkka_core)
BadDrawable = _valkka_core.BadDrawable

_valkka_core.BadAccess_swigconstant(_valkka_core)
BadAccess = _valkka_core.BadAccess

_valkka_core.BadAlloc_swigconstant(_valkka_core)
BadAlloc = _valkka_core.BadAlloc

_valkka_core.BadColor_swigconstant(_valkka_core)
BadColor = _valkka_core.BadColor

_valkka_core.BadGC_swigconstant(_valkka_core)
BadGC = _valkka_core.BadGC

_valkka_core.BadIDChoice_swigconstant(_valkka_core)
BadIDChoice = _valkka_core.BadIDChoice

_valkka_core.BadName_swigconstant(_valkka_core)
BadName = _valkka_core.BadName

_valkka_core.BadLength_swigconstant(_valkka_core)
BadLength = _valkka_core.BadLength

_valkka_core.BadImplementation_swigconstant(_valkka_core)
BadImplementation = _valkka_core.BadImplementation

_valkka_core.FirstExtensionError_swigconstant(_valkka_core)
FirstExtensionError = _valkka_core.FirstExtensionError

_valkka_core.LastExtensionError_swigconstant(_valkka_core)
LastExtensionError = _valkka_core.LastExtensionError

_valkka_core.InputOutput_swigconstant(_valkka_core)
InputOutput = _valkka_core.InputOutput

_valkka_core.InputOnly_swigconstant(_valkka_core)
InputOnly = _valkka_core.InputOnly

_valkka_core.CWBackPixmap_swigconstant(_valkka_core)
CWBackPixmap = _valkka_core.CWBackPixmap

_valkka_core.CWBackPixel_swigconstant(_valkka_core)
CWBackPixel = _valkka_core.CWBackPixel

_valkka_core.CWBorderPixmap_swigconstant(_valkka_core)
CWBorderPixmap = _valkka_core.CWBorderPixmap

_valkka_core.CWBorderPixel_swigconstant(_valkka_core)
CWBorderPixel = _valkka_core.CWBorderPixel

_valkka_core.CWBitGravity_swigconstant(_valkka_core)
CWBitGravity = _valkka_core.CWBitGravity

_valkka_core.CWWinGravity_swigconstant(_valkka_core)
CWWinGravity = _valkka_core.CWWinGravity

_valkka_core.CWBackingStore_swigconstant(_valkka_core)
CWBackingStore = _valkka_core.CWBackingStore

_valkka_core.CWBackingPlanes_swigconstant(_valkka_core)
CWBackingPlanes = _valkka_core.CWBackingPlanes

_valkka_core.CWBackingPixel_swigconstant(_valkka_core)
CWBackingPixel = _valkka_core.CWBackingPixel

_valkka_core.CWOverrideRedirect_swigconstant(_valkka_core)
CWOverrideRedirect = _valkka_core.CWOverrideRedirect

_valkka_core.CWSaveUnder_swigconstant(_valkka_core)
CWSaveUnder = _valkka_core.CWSaveUnder

_valkka_core.CWEventMask_swigconstant(_valkka_core)
CWEventMask = _valkka_core.CWEventMask

_valkka_core.CWDontPropagate_swigconstant(_valkka_core)
CWDontPropagate = _valkka_core.CWDontPropagate

_valkka_core.CWColormap_swigconstant(_valkka_core)
CWColormap = _valkka_core.CWColormap

_valkka_core.CWCursor_swigconstant(_valkka_core)
CWCursor = _valkka_core.CWCursor

_valkka_core.CWX_swigconstant(_valkka_core)
CWX = _valkka_core.CWX

_valkka_core.CWY_swigconstant(_valkka_core)
CWY = _valkka_core.CWY

_valkka_core.CWWidth_swigconstant(_valkka_core)
CWWidth = _valkka_core.CWWidth

_valkka_core.CWHeight_swigconstant(_valkka_core)
CWHeight = _valkka_core.CWHeight

_valkka_core.CWBorderWidth_swigconstant(_valkka_core)
CWBorderWidth = _valkka_core.CWBorderWidth

_valkka_core.CWSibling_swigconstant(_valkka_core)
CWSibling = _valkka_core.CWSibling

_valkka_core.CWStackMode_swigconstant(_valkka_core)
CWStackMode = _valkka_core.CWStackMode

_valkka_core.ForgetGravity_swigconstant(_valkka_core)
ForgetGravity = _valkka_core.ForgetGravity

_valkka_core.NorthWestGravity_swigconstant(_valkka_core)
NorthWestGravity = _valkka_core.NorthWestGravity

_valkka_core.NorthGravity_swigconstant(_valkka_core)
NorthGravity = _valkka_core.NorthGravity

_valkka_core.NorthEastGravity_swigconstant(_valkka_core)
NorthEastGravity = _valkka_core.NorthEastGravity

_valkka_core.WestGravity_swigconstant(_valkka_core)
WestGravity = _valkka_core.WestGravity

_valkka_core.CenterGravity_swigconstant(_valkka_core)
CenterGravity = _valkka_core.CenterGravity

_valkka_core.EastGravity_swigconstant(_valkka_core)
EastGravity = _valkka_core.EastGravity

_valkka_core.SouthWestGravity_swigconstant(_valkka_core)
SouthWestGravity = _valkka_core.SouthWestGravity

_valkka_core.SouthGravity_swigconstant(_valkka_core)
SouthGravity = _valkka_core.SouthGravity

_valkka_core.SouthEastGravity_swigconstant(_valkka_core)
SouthEastGravity = _valkka_core.SouthEastGravity

_valkka_core.StaticGravity_swigconstant(_valkka_core)
StaticGravity = _valkka_core.StaticGravity

_valkka_core.UnmapGravity_swigconstant(_valkka_core)
UnmapGravity = _valkka_core.UnmapGravity

_valkka_core.NotUseful_swigconstant(_valkka_core)
NotUseful = _valkka_core.NotUseful

_valkka_core.WhenMapped_swigconstant(_valkka_core)
WhenMapped = _valkka_core.WhenMapped

_valkka_core.Always_swigconstant(_valkka_core)
Always = _valkka_core.Always

_valkka_core.IsUnmapped_swigconstant(_valkka_core)
IsUnmapped = _valkka_core.IsUnmapped

_valkka_core.IsUnviewable_swigconstant(_valkka_core)
IsUnviewable = _valkka_core.IsUnviewable

_valkka_core.IsViewable_swigconstant(_valkka_core)
IsViewable = _valkka_core.IsViewable

_valkka_core.SetModeInsert_swigconstant(_valkka_core)
SetModeInsert = _valkka_core.SetModeInsert

_valkka_core.SetModeDelete_swigconstant(_valkka_core)
SetModeDelete = _valkka_core.SetModeDelete

_valkka_core.DestroyAll_swigconstant(_valkka_core)
DestroyAll = _valkka_core.DestroyAll

_valkka_core.RetainPermanent_swigconstant(_valkka_core)
RetainPermanent = _valkka_core.RetainPermanent

_valkka_core.RetainTemporary_swigconstant(_valkka_core)
RetainTemporary = _valkka_core.RetainTemporary

_valkka_core.Above_swigconstant(_valkka_core)
Above = _valkka_core.Above

_valkka_core.Below_swigconstant(_valkka_core)
Below = _valkka_core.Below

_valkka_core.TopIf_swigconstant(_valkka_core)
TopIf = _valkka_core.TopIf

_valkka_core.BottomIf_swigconstant(_valkka_core)
BottomIf = _valkka_core.BottomIf

_valkka_core.Opposite_swigconstant(_valkka_core)
Opposite = _valkka_core.Opposite

_valkka_core.RaiseLowest_swigconstant(_valkka_core)
RaiseLowest = _valkka_core.RaiseLowest

_valkka_core.LowerHighest_swigconstant(_valkka_core)
LowerHighest = _valkka_core.LowerHighest

_valkka_core.PropModeReplace_swigconstant(_valkka_core)
PropModeReplace = _valkka_core.PropModeReplace

_valkka_core.PropModePrepend_swigconstant(_valkka_core)
PropModePrepend = _valkka_core.PropModePrepend

_valkka_core.PropModeAppend_swigconstant(_valkka_core)
PropModeAppend = _valkka_core.PropModeAppend

_valkka_core.GXclear_swigconstant(_valkka_core)
GXclear = _valkka_core.GXclear

_valkka_core.GXand_swigconstant(_valkka_core)
GXand = _valkka_core.GXand

_valkka_core.GXandReverse_swigconstant(_valkka_core)
GXandReverse = _valkka_core.GXandReverse

_valkka_core.GXcopy_swigconstant(_valkka_core)
GXcopy = _valkka_core.GXcopy

_valkka_core.GXandInverted_swigconstant(_valkka_core)
GXandInverted = _valkka_core.GXandInverted

_valkka_core.GXnoop_swigconstant(_valkka_core)
GXnoop = _valkka_core.GXnoop

_valkka_core.GXxor_swigconstant(_valkka_core)
GXxor = _valkka_core.GXxor

_valkka_core.GXor_swigconstant(_valkka_core)
GXor = _valkka_core.GXor

_valkka_core.GXnor_swigconstant(_valkka_core)
GXnor = _valkka_core.GXnor

_valkka_core.GXequiv_swigconstant(_valkka_core)
GXequiv = _valkka_core.GXequiv

_valkka_core.GXinvert_swigconstant(_valkka_core)
GXinvert = _valkka_core.GXinvert

_valkka_core.GXorReverse_swigconstant(_valkka_core)
GXorReverse = _valkka_core.GXorReverse

_valkka_core.GXcopyInverted_swigconstant(_valkka_core)
GXcopyInverted = _valkka_core.GXcopyInverted

_valkka_core.GXorInverted_swigconstant(_valkka_core)
GXorInverted = _valkka_core.GXorInverted

_valkka_core.GXnand_swigconstant(_valkka_core)
GXnand = _valkka_core.GXnand

_valkka_core.GXset_swigconstant(_valkka_core)
GXset = _valkka_core.GXset

_valkka_core.LineSolid_swigconstant(_valkka_core)
LineSolid = _valkka_core.LineSolid

_valkka_core.LineOnOffDash_swigconstant(_valkka_core)
LineOnOffDash = _valkka_core.LineOnOffDash

_valkka_core.LineDoubleDash_swigconstant(_valkka_core)
LineDoubleDash = _valkka_core.LineDoubleDash

_valkka_core.CapNotLast_swigconstant(_valkka_core)
CapNotLast = _valkka_core.CapNotLast

_valkka_core.CapButt_swigconstant(_valkka_core)
CapButt = _valkka_core.CapButt

_valkka_core.CapRound_swigconstant(_valkka_core)
CapRound = _valkka_core.CapRound

_valkka_core.CapProjecting_swigconstant(_valkka_core)
CapProjecting = _valkka_core.CapProjecting

_valkka_core.JoinMiter_swigconstant(_valkka_core)
JoinMiter = _valkka_core.JoinMiter

_valkka_core.JoinRound_swigconstant(_valkka_core)
JoinRound = _valkka_core.JoinRound

_valkka_core.JoinBevel_swigconstant(_valkka_core)
JoinBevel = _valkka_core.JoinBevel

_valkka_core.FillSolid_swigconstant(_valkka_core)
FillSolid = _valkka_core.FillSolid

_valkka_core.FillTiled_swigconstant(_valkka_core)
FillTiled = _valkka_core.FillTiled

_valkka_core.FillStippled_swigconstant(_valkka_core)
FillStippled = _valkka_core.FillStippled

_valkka_core.FillOpaqueStippled_swigconstant(_valkka_core)
FillOpaqueStippled = _valkka_core.FillOpaqueStippled

_valkka_core.EvenOddRule_swigconstant(_valkka_core)
EvenOddRule = _valkka_core.EvenOddRule

_valkka_core.WindingRule_swigconstant(_valkka_core)
WindingRule = _valkka_core.WindingRule

_valkka_core.ClipByChildren_swigconstant(_valkka_core)
ClipByChildren = _valkka_core.ClipByChildren

_valkka_core.IncludeInferiors_swigconstant(_valkka_core)
IncludeInferiors = _valkka_core.IncludeInferiors

_valkka_core.Unsorted_swigconstant(_valkka_core)
Unsorted = _valkka_core.Unsorted

_valkka_core.YSorted_swigconstant(_valkka_core)
YSorted = _valkka_core.YSorted

_valkka_core.YXSorted_swigconstant(_valkka_core)
YXSorted = _valkka_core.YXSorted

_valkka_core.YXBanded_swigconstant(_valkka_core)
YXBanded = _valkka_core.YXBanded

_valkka_core.CoordModeOrigin_swigconstant(_valkka_core)
CoordModeOrigin = _valkka_core.CoordModeOrigin

_valkka_core.CoordModePrevious_swigconstant(_valkka_core)
CoordModePrevious = _valkka_core.CoordModePrevious

_valkka_core.Complex_swigconstant(_valkka_core)
Complex = _valkka_core.Complex

_valkka_core.Nonconvex_swigconstant(_valkka_core)
Nonconvex = _valkka_core.Nonconvex

_valkka_core.Convex_swigconstant(_valkka_core)
Convex = _valkka_core.Convex

_valkka_core.ArcChord_swigconstant(_valkka_core)
ArcChord = _valkka_core.ArcChord

_valkka_core.ArcPieSlice_swigconstant(_valkka_core)
ArcPieSlice = _valkka_core.ArcPieSlice

_valkka_core.GCFunction_swigconstant(_valkka_core)
GCFunction = _valkka_core.GCFunction

_valkka_core.GCPlaneMask_swigconstant(_valkka_core)
GCPlaneMask = _valkka_core.GCPlaneMask

_valkka_core.GCForeground_swigconstant(_valkka_core)
GCForeground = _valkka_core.GCForeground

_valkka_core.GCBackground_swigconstant(_valkka_core)
GCBackground = _valkka_core.GCBackground

_valkka_core.GCLineWidth_swigconstant(_valkka_core)
GCLineWidth = _valkka_core.GCLineWidth

_valkka_core.GCLineStyle_swigconstant(_valkka_core)
GCLineStyle = _valkka_core.GCLineStyle

_valkka_core.GCCapStyle_swigconstant(_valkka_core)
GCCapStyle = _valkka_core.GCCapStyle

_valkka_core.GCJoinStyle_swigconstant(_valkka_core)
GCJoinStyle = _valkka_core.GCJoinStyle

_valkka_core.GCFillStyle_swigconstant(_valkka_core)
GCFillStyle = _valkka_core.GCFillStyle

_valkka_core.GCFillRule_swigconstant(_valkka_core)
GCFillRule = _valkka_core.GCFillRule

_valkka_core.GCTile_swigconstant(_valkka_core)
GCTile = _valkka_core.GCTile

_valkka_core.GCStipple_swigconstant(_valkka_core)
GCStipple = _valkka_core.GCStipple

_valkka_core.GCTileStipXOrigin_swigconstant(_valkka_core)
GCTileStipXOrigin = _valkka_core.GCTileStipXOrigin

_valkka_core.GCTileStipYOrigin_swigconstant(_valkka_core)
GCTileStipYOrigin = _valkka_core.GCTileStipYOrigin

_valkka_core.GCFont_swigconstant(_valkka_core)
GCFont = _valkka_core.GCFont

_valkka_core.GCSubwindowMode_swigconstant(_valkka_core)
GCSubwindowMode = _valkka_core.GCSubwindowMode

_valkka_core.GCGraphicsExposures_swigconstant(_valkka_core)
GCGraphicsExposures = _valkka_core.GCGraphicsExposures

_valkka_core.GCClipXOrigin_swigconstant(_valkka_core)
GCClipXOrigin = _valkka_core.GCClipXOrigin

_valkka_core.GCClipYOrigin_swigconstant(_valkka_core)
GCClipYOrigin = _valkka_core.GCClipYOrigin

_valkka_core.GCClipMask_swigconstant(_valkka_core)
GCClipMask = _valkka_core.GCClipMask

_valkka_core.GCDashOffset_swigconstant(_valkka_core)
GCDashOffset = _valkka_core.GCDashOffset

_valkka_core.GCDashList_swigconstant(_valkka_core)
GCDashList = _valkka_core.GCDashList

_valkka_core.GCArcMode_swigconstant(_valkka_core)
GCArcMode = _valkka_core.GCArcMode

_valkka_core.GCLastBit_swigconstant(_valkka_core)
GCLastBit = _valkka_core.GCLastBit

_valkka_core.FontLeftToRight_swigconstant(_valkka_core)
FontLeftToRight = _valkka_core.FontLeftToRight

_valkka_core.FontRightToLeft_swigconstant(_valkka_core)
FontRightToLeft = _valkka_core.FontRightToLeft

_valkka_core.FontChange_swigconstant(_valkka_core)
FontChange = _valkka_core.FontChange

_valkka_core.XYBitmap_swigconstant(_valkka_core)
XYBitmap = _valkka_core.XYBitmap

_valkka_core.XYPixmap_swigconstant(_valkka_core)
XYPixmap = _valkka_core.XYPixmap

_valkka_core.ZPixmap_swigconstant(_valkka_core)
ZPixmap = _valkka_core.ZPixmap

_valkka_core.AllocNone_swigconstant(_valkka_core)
AllocNone = _valkka_core.AllocNone

_valkka_core.AllocAll_swigconstant(_valkka_core)
AllocAll = _valkka_core.AllocAll

_valkka_core.DoRed_swigconstant(_valkka_core)
DoRed = _valkka_core.DoRed

_valkka_core.DoGreen_swigconstant(_valkka_core)
DoGreen = _valkka_core.DoGreen

_valkka_core.DoBlue_swigconstant(_valkka_core)
DoBlue = _valkka_core.DoBlue

_valkka_core.CursorShape_swigconstant(_valkka_core)
CursorShape = _valkka_core.CursorShape

_valkka_core.TileShape_swigconstant(_valkka_core)
TileShape = _valkka_core.TileShape

_valkka_core.StippleShape_swigconstant(_valkka_core)
StippleShape = _valkka_core.StippleShape

_valkka_core.AutoRepeatModeOff_swigconstant(_valkka_core)
AutoRepeatModeOff = _valkka_core.AutoRepeatModeOff

_valkka_core.AutoRepeatModeOn_swigconstant(_valkka_core)
AutoRepeatModeOn = _valkka_core.AutoRepeatModeOn

_valkka_core.AutoRepeatModeDefault_swigconstant(_valkka_core)
AutoRepeatModeDefault = _valkka_core.AutoRepeatModeDefault

_valkka_core.LedModeOff_swigconstant(_valkka_core)
LedModeOff = _valkka_core.LedModeOff

_valkka_core.LedModeOn_swigconstant(_valkka_core)
LedModeOn = _valkka_core.LedModeOn

_valkka_core.KBKeyClickPercent_swigconstant(_valkka_core)
KBKeyClickPercent = _valkka_core.KBKeyClickPercent

_valkka_core.KBBellPercent_swigconstant(_valkka_core)
KBBellPercent = _valkka_core.KBBellPercent

_valkka_core.KBBellPitch_swigconstant(_valkka_core)
KBBellPitch = _valkka_core.KBBellPitch

_valkka_core.KBBellDuration_swigconstant(_valkka_core)
KBBellDuration = _valkka_core.KBBellDuration

_valkka_core.KBLed_swigconstant(_valkka_core)
KBLed = _valkka_core.KBLed

_valkka_core.KBLedMode_swigconstant(_valkka_core)
KBLedMode = _valkka_core.KBLedMode

_valkka_core.KBKey_swigconstant(_valkka_core)
KBKey = _valkka_core.KBKey

_valkka_core.KBAutoRepeatMode_swigconstant(_valkka_core)
KBAutoRepeatMode = _valkka_core.KBAutoRepeatMode

_valkka_core.MappingSuccess_swigconstant(_valkka_core)
MappingSuccess = _valkka_core.MappingSuccess

_valkka_core.MappingBusy_swigconstant(_valkka_core)
MappingBusy = _valkka_core.MappingBusy

_valkka_core.MappingFailed_swigconstant(_valkka_core)
MappingFailed = _valkka_core.MappingFailed

_valkka_core.MappingModifier_swigconstant(_valkka_core)
MappingModifier = _valkka_core.MappingModifier

_valkka_core.MappingKeyboard_swigconstant(_valkka_core)
MappingKeyboard = _valkka_core.MappingKeyboard

_valkka_core.MappingPointer_swigconstant(_valkka_core)
MappingPointer = _valkka_core.MappingPointer

_valkka_core.DontPreferBlanking_swigconstant(_valkka_core)
DontPreferBlanking = _valkka_core.DontPreferBlanking

_valkka_core.PreferBlanking_swigconstant(_valkka_core)
PreferBlanking = _valkka_core.PreferBlanking

_valkka_core.DefaultBlanking_swigconstant(_valkka_core)
DefaultBlanking = _valkka_core.DefaultBlanking

_valkka_core.DisableScreenSaver_swigconstant(_valkka_core)
DisableScreenSaver = _valkka_core.DisableScreenSaver

_valkka_core.DisableScreenInterval_swigconstant(_valkka_core)
DisableScreenInterval = _valkka_core.DisableScreenInterval

_valkka_core.DontAllowExposures_swigconstant(_valkka_core)
DontAllowExposures = _valkka_core.DontAllowExposures

_valkka_core.AllowExposures_swigconstant(_valkka_core)
AllowExposures = _valkka_core.AllowExposures

_valkka_core.DefaultExposures_swigconstant(_valkka_core)
DefaultExposures = _valkka_core.DefaultExposures

_valkka_core.ScreenSaverReset_swigconstant(_valkka_core)
ScreenSaverReset = _valkka_core.ScreenSaverReset

_valkka_core.ScreenSaverActive_swigconstant(_valkka_core)
ScreenSaverActive = _valkka_core.ScreenSaverActive

_valkka_core.HostInsert_swigconstant(_valkka_core)
HostInsert = _valkka_core.HostInsert

_valkka_core.HostDelete_swigconstant(_valkka_core)
HostDelete = _valkka_core.HostDelete

_valkka_core.EnableAccess_swigconstant(_valkka_core)
EnableAccess = _valkka_core.EnableAccess

_valkka_core.DisableAccess_swigconstant(_valkka_core)
DisableAccess = _valkka_core.DisableAccess

_valkka_core.StaticGray_swigconstant(_valkka_core)
StaticGray = _valkka_core.StaticGray

_valkka_core.GrayScale_swigconstant(_valkka_core)
GrayScale = _valkka_core.GrayScale

_valkka_core.StaticColor_swigconstant(_valkka_core)
StaticColor = _valkka_core.StaticColor

_valkka_core.PseudoColor_swigconstant(_valkka_core)
PseudoColor = _valkka_core.PseudoColor

_valkka_core.TrueColor_swigconstant(_valkka_core)
TrueColor = _valkka_core.TrueColor

_valkka_core.DirectColor_swigconstant(_valkka_core)
DirectColor = _valkka_core.DirectColor

_valkka_core.LSBFirst_swigconstant(_valkka_core)
LSBFirst = _valkka_core.LSBFirst

_valkka_core.MSBFirst_swigconstant(_valkka_core)
MSBFirst = _valkka_core.MSBFirst

def getNumpyShmem(rb, i):
    return _valkka_core.getNumpyShmem(rb, i)
getNumpyShmem = _valkka_core.getNumpyShmem

def XInitThreads():
    return _valkka_core.XInitThreads()
XInitThreads = _valkka_core.XInitThreads
class FrameFilter(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, FrameFilter, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, FrameFilter, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _valkka_core.delete_FrameFilter
    __del__ = lambda self: None
FrameFilter_swigregister = _valkka_core.FrameFilter_swigregister
FrameFilter_swigregister(FrameFilter)

class DummyFrameFilter(FrameFilter):
    __swig_setmethods__ = {}
    for _s in [FrameFilter]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, DummyFrameFilter, name, value)
    __swig_getmethods__ = {}
    for _s in [FrameFilter]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, DummyFrameFilter, name)
    __repr__ = _swig_repr

    def __init__(self, name, verbose=True, next=None):
        this = _valkka_core.new_DummyFrameFilter(name, verbose, next)
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _valkka_core.delete_DummyFrameFilter
    __del__ = lambda self: None
DummyFrameFilter_swigregister = _valkka_core.DummyFrameFilter_swigregister
DummyFrameFilter_swigregister(DummyFrameFilter)

class InfoFrameFilter(FrameFilter):
    __swig_setmethods__ = {}
    for _s in [FrameFilter]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, InfoFrameFilter, name, value)
    __swig_getmethods__ = {}
    for _s in [FrameFilter]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, InfoFrameFilter, name)
    __repr__ = _swig_repr

    def __init__(self, name, next=None):
        this = _valkka_core.new_InfoFrameFilter(name, next)
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _valkka_core.delete_InfoFrameFilter
    __del__ = lambda self: None
InfoFrameFilter_swigregister = _valkka_core.InfoFrameFilter_swigregister
InfoFrameFilter_swigregister(InfoFrameFilter)

class BriefInfoFrameFilter(FrameFilter):
    __swig_setmethods__ = {}
    for _s in [FrameFilter]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, BriefInfoFrameFilter, name, value)
    __swig_getmethods__ = {}
    for _s in [FrameFilter]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, BriefInfoFrameFilter, name)
    __repr__ = _swig_repr

    def __init__(self, name, next=None):
        this = _valkka_core.new_BriefInfoFrameFilter(name, next)
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _valkka_core.delete_BriefInfoFrameFilter
    __del__ = lambda self: None
BriefInfoFrameFilter_swigregister = _valkka_core.BriefInfoFrameFilter_swigregister
BriefInfoFrameFilter_swigregister(BriefInfoFrameFilter)

class ForkFrameFilter(FrameFilter):
    __swig_setmethods__ = {}
    for _s in [FrameFilter]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ForkFrameFilter, name, value)
    __swig_getmethods__ = {}
    for _s in [FrameFilter]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, ForkFrameFilter, name)
    __repr__ = _swig_repr

    def __init__(self, name, next=None, next2=None):
        this = _valkka_core.new_ForkFrameFilter(name, next, next2)
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _valkka_core.delete_ForkFrameFilter
    __del__ = lambda self: None
ForkFrameFilter_swigregister = _valkka_core.ForkFrameFilter_swigregister
ForkFrameFilter_swigregister(ForkFrameFilter)

class SlotFrameFilter(FrameFilter):
    __swig_setmethods__ = {}
    for _s in [FrameFilter]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, SlotFrameFilter, name, value)
    __swig_getmethods__ = {}
    for _s in [FrameFilter]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, SlotFrameFilter, name)
    __repr__ = _swig_repr

    def __init__(self, name, n_slot, next=None):
        this = _valkka_core.new_SlotFrameFilter(name, n_slot, next)
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _valkka_core.delete_SlotFrameFilter
    __del__ = lambda self: None
SlotFrameFilter_swigregister = _valkka_core.SlotFrameFilter_swigregister
SlotFrameFilter_swigregister(SlotFrameFilter)

class DumpFrameFilter(FrameFilter):
    __swig_setmethods__ = {}
    for _s in [FrameFilter]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, DumpFrameFilter, name, value)
    __swig_getmethods__ = {}
    for _s in [FrameFilter]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, DumpFrameFilter, name)
    __repr__ = _swig_repr

    def __init__(self, name, next=None):
        this = _valkka_core.new_DumpFrameFilter(name, next)
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _valkka_core.delete_DumpFrameFilter
    __del__ = lambda self: None
DumpFrameFilter_swigregister = _valkka_core.DumpFrameFilter_swigregister
DumpFrameFilter_swigregister(DumpFrameFilter)

class CountFrameFilter(FrameFilter):
    __swig_setmethods__ = {}
    for _s in [FrameFilter]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CountFrameFilter, name, value)
    __swig_getmethods__ = {}
    for _s in [FrameFilter]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, CountFrameFilter, name)
    __repr__ = _swig_repr

    def __init__(self, name, next=None):
        this = _valkka_core.new_CountFrameFilter(name, next)
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _valkka_core.delete_CountFrameFilter
    __del__ = lambda self: None
CountFrameFilter_swigregister = _valkka_core.CountFrameFilter_swigregister
CountFrameFilter_swigregister(CountFrameFilter)

class TimestampFrameFilter(FrameFilter):
    __swig_setmethods__ = {}
    for _s in [FrameFilter]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, TimestampFrameFilter, name, value)
    __swig_getmethods__ = {}
    for _s in [FrameFilter]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, TimestampFrameFilter, name)
    __repr__ = _swig_repr

    def __init__(self, name, next=None, msdiff_max=1000):
        this = _valkka_core.new_TimestampFrameFilter(name, next, msdiff_max)
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _valkka_core.delete_TimestampFrameFilter
    __del__ = lambda self: None
TimestampFrameFilter_swigregister = _valkka_core.TimestampFrameFilter_swigregister
TimestampFrameFilter_swigregister(TimestampFrameFilter)

class RepeatH264ParsFrameFilter(FrameFilter):
    __swig_setmethods__ = {}
    for _s in [FrameFilter]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, RepeatH264ParsFrameFilter, name, value)
    __swig_getmethods__ = {}
    for _s in [FrameFilter]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, RepeatH264ParsFrameFilter, name)
    __repr__ = _swig_repr

    def __init__(self, name, next=None):
        this = _valkka_core.new_RepeatH264ParsFrameFilter(name, next)
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _valkka_core.delete_RepeatH264ParsFrameFilter
    __del__ = lambda self: None
RepeatH264ParsFrameFilter_swigregister = _valkka_core.RepeatH264ParsFrameFilter_swigregister
RepeatH264ParsFrameFilter_swigregister(RepeatH264ParsFrameFilter)

class GateFrameFilter(FrameFilter):
    __swig_setmethods__ = {}
    for _s in [FrameFilter]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, GateFrameFilter, name, value)
    __swig_getmethods__ = {}
    for _s in [FrameFilter]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, GateFrameFilter, name)
    __repr__ = _swig_repr

    def __init__(self, name, next=None):
        this = _valkka_core.new_GateFrameFilter(name, next)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def set(self):
        return _valkka_core.GateFrameFilter_set(self)

    def unSet(self):
        return _valkka_core.GateFrameFilter_unSet(self)
    __swig_destroy__ = _valkka_core.delete_GateFrameFilter
    __del__ = lambda self: None
GateFrameFilter_swigregister = _valkka_core.GateFrameFilter_swigregister
GateFrameFilter_swigregister(GateFrameFilter)

class SetSlotFrameFilter(FrameFilter):
    __swig_setmethods__ = {}
    for _s in [FrameFilter]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, SetSlotFrameFilter, name, value)
    __swig_getmethods__ = {}
    for _s in [FrameFilter]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, SetSlotFrameFilter, name)
    __repr__ = _swig_repr

    def __init__(self, name, next=None):
        this = _valkka_core.new_SetSlotFrameFilter(name, next)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def setSlot(self, n=0):
        return _valkka_core.SetSlotFrameFilter_setSlot(self, n)
    __swig_destroy__ = _valkka_core.delete_SetSlotFrameFilter
    __del__ = lambda self: None
SetSlotFrameFilter_swigregister = _valkka_core.SetSlotFrameFilter_swigregister
SetSlotFrameFilter_swigregister(SetSlotFrameFilter)

class TimeIntervalFrameFilter(FrameFilter):
    __swig_setmethods__ = {}
    for _s in [FrameFilter]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, TimeIntervalFrameFilter, name, value)
    __swig_getmethods__ = {}
    for _s in [FrameFilter]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, TimeIntervalFrameFilter, name)
    __repr__ = _swig_repr

    def __init__(self, name, mstimedelta, next=None):
        this = _valkka_core.new_TimeIntervalFrameFilter(name, mstimedelta, next)
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _valkka_core.delete_TimeIntervalFrameFilter
    __del__ = lambda self: None
TimeIntervalFrameFilter_swigregister = _valkka_core.TimeIntervalFrameFilter_swigregister
TimeIntervalFrameFilter_swigregister(TimeIntervalFrameFilter)

class SwScaleFrameFilter(FrameFilter):
    __swig_setmethods__ = {}
    for _s in [FrameFilter]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, SwScaleFrameFilter, name, value)
    __swig_getmethods__ = {}
    for _s in [FrameFilter]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, SwScaleFrameFilter, name)
    __repr__ = _swig_repr

    def __init__(self, name, target_width, target_height, next=None):
        this = _valkka_core.new_SwScaleFrameFilter(name, target_width, target_height, next)
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _valkka_core.delete_SwScaleFrameFilter
    __del__ = lambda self: None
SwScaleFrameFilter_swigregister = _valkka_core.SwScaleFrameFilter_swigregister
SwScaleFrameFilter_swigregister(SwScaleFrameFilter)

class FrameFifo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, FrameFifo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, FrameFifo, name)
    __repr__ = _swig_repr

    def __init__(self, name, n_stack):
        this = _valkka_core.new_FrameFifo(name, n_stack)
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _valkka_core.delete_FrameFifo
    __del__ = lambda self: None
FrameFifo_swigregister = _valkka_core.FrameFifo_swigregister
FrameFifo_swigregister(FrameFifo)

class FifoFrameFilter(FrameFilter):
    __swig_setmethods__ = {}
    for _s in [FrameFilter]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, FifoFrameFilter, name, value)
    __swig_getmethods__ = {}
    for _s in [FrameFilter]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, FifoFrameFilter, name)
    __repr__ = _swig_repr

    def __init__(self, name, framefifo):
        this = _valkka_core.new_FifoFrameFilter(name, framefifo)
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _valkka_core.delete_FifoFrameFilter
    __del__ = lambda self: None
FifoFrameFilter_swigregister = _valkka_core.FifoFrameFilter_swigregister
FifoFrameFilter_swigregister(FifoFrameFilter)

class BlockingFifoFrameFilter(FrameFilter):
    __swig_setmethods__ = {}
    for _s in [FrameFilter]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, BlockingFifoFrameFilter, name, value)
    __swig_getmethods__ = {}
    for _s in [FrameFilter]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, BlockingFifoFrameFilter, name)
    __repr__ = _swig_repr

    def __init__(self, name, framefifo):
        this = _valkka_core.new_BlockingFifoFrameFilter(name, framefifo)
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _valkka_core.delete_BlockingFifoFrameFilter
    __del__ = lambda self: None
BlockingFifoFrameFilter_swigregister = _valkka_core.BlockingFifoFrameFilter_swigregister
BlockingFifoFrameFilter_swigregister(BlockingFifoFrameFilter)

class Thread(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Thread, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Thread, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _valkka_core.delete_Thread
    __del__ = lambda self: None

    def startCall(self):
        return _valkka_core.Thread_startCall(self)

    def stopCall(self):
        return _valkka_core.Thread_stopCall(self)
Thread_swigregister = _valkka_core.Thread_swigregister
Thread_swigregister(Thread)

class LiveFifo(FrameFifo):
    __swig_setmethods__ = {}
    for _s in [FrameFifo]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, LiveFifo, name, value)
    __swig_getmethods__ = {}
    for _s in [FrameFifo]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, LiveFifo, name)
    __repr__ = _swig_repr

    def __init__(self, name, n_stack):
        this = _valkka_core.new_LiveFifo(name, n_stack)
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _valkka_core.delete_LiveFifo
    __del__ = lambda self: None
LiveFifo_swigregister = _valkka_core.LiveFifo_swigregister
LiveFifo_swigregister(LiveFifo)


_valkka_core.LiveConnectionType_none_swigconstant(_valkka_core)
LiveConnectionType_none = _valkka_core.LiveConnectionType_none

_valkka_core.LiveConnectionType_rtsp_swigconstant(_valkka_core)
LiveConnectionType_rtsp = _valkka_core.LiveConnectionType_rtsp

_valkka_core.LiveConnectionType_sdp_swigconstant(_valkka_core)
LiveConnectionType_sdp = _valkka_core.LiveConnectionType_sdp
class LiveConnectionContext(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, LiveConnectionContext, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, LiveConnectionContext, name)
    __repr__ = _swig_repr
    __swig_setmethods__["connection_type"] = _valkka_core.LiveConnectionContext_connection_type_set
    __swig_getmethods__["connection_type"] = _valkka_core.LiveConnectionContext_connection_type_get
    if _newclass:
        connection_type = _swig_property(_valkka_core.LiveConnectionContext_connection_type_get, _valkka_core.LiveConnectionContext_connection_type_set)
    __swig_setmethods__["address"] = _valkka_core.LiveConnectionContext_address_set
    __swig_getmethods__["address"] = _valkka_core.LiveConnectionContext_address_get
    if _newclass:
        address = _swig_property(_valkka_core.LiveConnectionContext_address_get, _valkka_core.LiveConnectionContext_address_set)
    __swig_setmethods__["slot"] = _valkka_core.LiveConnectionContext_slot_set
    __swig_getmethods__["slot"] = _valkka_core.LiveConnectionContext_slot_get
    if _newclass:
        slot = _swig_property(_valkka_core.LiveConnectionContext_slot_get, _valkka_core.LiveConnectionContext_slot_set)
    __swig_setmethods__["framefilter"] = _valkka_core.LiveConnectionContext_framefilter_set
    __swig_getmethods__["framefilter"] = _valkka_core.LiveConnectionContext_framefilter_get
    if _newclass:
        framefilter = _swig_property(_valkka_core.LiveConnectionContext_framefilter_get, _valkka_core.LiveConnectionContext_framefilter_set)

    def __init__(self):
        this = _valkka_core.new_LiveConnectionContext()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _valkka_core.delete_LiveConnectionContext
    __del__ = lambda self: None
LiveConnectionContext_swigregister = _valkka_core.LiveConnectionContext_swigregister
LiveConnectionContext_swigregister(LiveConnectionContext)

class LiveOutboundContext(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, LiveOutboundContext, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, LiveOutboundContext, name)
    __repr__ = _swig_repr
    __swig_setmethods__["connection_type"] = _valkka_core.LiveOutboundContext_connection_type_set
    __swig_getmethods__["connection_type"] = _valkka_core.LiveOutboundContext_connection_type_get
    if _newclass:
        connection_type = _swig_property(_valkka_core.LiveOutboundContext_connection_type_get, _valkka_core.LiveOutboundContext_connection_type_set)
    __swig_setmethods__["address"] = _valkka_core.LiveOutboundContext_address_set
    __swig_getmethods__["address"] = _valkka_core.LiveOutboundContext_address_get
    if _newclass:
        address = _swig_property(_valkka_core.LiveOutboundContext_address_get, _valkka_core.LiveOutboundContext_address_set)
    __swig_setmethods__["portnum"] = _valkka_core.LiveOutboundContext_portnum_set
    __swig_getmethods__["portnum"] = _valkka_core.LiveOutboundContext_portnum_get
    if _newclass:
        portnum = _swig_property(_valkka_core.LiveOutboundContext_portnum_get, _valkka_core.LiveOutboundContext_portnum_set)
    __swig_setmethods__["ttl"] = _valkka_core.LiveOutboundContext_ttl_set
    __swig_getmethods__["ttl"] = _valkka_core.LiveOutboundContext_ttl_get
    if _newclass:
        ttl = _swig_property(_valkka_core.LiveOutboundContext_ttl_get, _valkka_core.LiveOutboundContext_ttl_set)
    __swig_setmethods__["slot"] = _valkka_core.LiveOutboundContext_slot_set
    __swig_getmethods__["slot"] = _valkka_core.LiveOutboundContext_slot_get
    if _newclass:
        slot = _swig_property(_valkka_core.LiveOutboundContext_slot_get, _valkka_core.LiveOutboundContext_slot_set)

    def __init__(self):
        this = _valkka_core.new_LiveOutboundContext()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _valkka_core.delete_LiveOutboundContext
    __del__ = lambda self: None
LiveOutboundContext_swigregister = _valkka_core.LiveOutboundContext_swigregister
LiveOutboundContext_swigregister(LiveOutboundContext)

class LiveThread(Thread):
    __swig_setmethods__ = {}
    for _s in [Thread]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, LiveThread, name, value)
    __swig_getmethods__ = {}
    for _s in [Thread]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, LiveThread, name)
    __repr__ = _swig_repr

    def __init__(self, name, n_stack=0, core_id=-1):
        this = _valkka_core.new_LiveThread(name, n_stack, core_id)
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _valkka_core.delete_LiveThread
    __del__ = lambda self: None

    def registerStreamCall(self, connection_ctx):
        return _valkka_core.LiveThread_registerStreamCall(self, connection_ctx)

    def deregisterStreamCall(self, connection_ctx):
        return _valkka_core.LiveThread_deregisterStreamCall(self, connection_ctx)

    def playStreamCall(self, connection_ctx):
        return _valkka_core.LiveThread_playStreamCall(self, connection_ctx)

    def stopStreamCall(self, connection_ctx):
        return _valkka_core.LiveThread_stopStreamCall(self, connection_ctx)

    def registerOutboundCall(self, outbound_ctx):
        return _valkka_core.LiveThread_registerOutboundCall(self, outbound_ctx)

    def stopCall(self):
        return _valkka_core.LiveThread_stopCall(self)

    def getFifo(self):
        return _valkka_core.LiveThread_getFifo(self)
LiveThread_swigregister = _valkka_core.LiveThread_swigregister
LiveThread_swigregister(LiveThread)

class AVThread(Thread):
    __swig_setmethods__ = {}
    for _s in [Thread]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, AVThread, name, value)
    __swig_getmethods__ = {}
    for _s in [Thread]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, AVThread, name)
    __repr__ = _swig_repr

    def __init__(self, name, infifo, outfilter, core_id=-1, mstimetolerance=0):
        this = _valkka_core.new_AVThread(name, infifo, outfilter, core_id, mstimetolerance)
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _valkka_core.delete_AVThread
    __del__ = lambda self: None

    def decodingOnCall(self):
        return _valkka_core.AVThread_decodingOnCall(self)

    def decodingOffCall(self):
        return _valkka_core.AVThread_decodingOffCall(self)

    def stopCall(self):
        return _valkka_core.AVThread_stopCall(self)
AVThread_swigregister = _valkka_core.AVThread_swigregister
AVThread_swigregister(AVThread)

class OpenGLFrameFifo(FrameFifo):
    __swig_setmethods__ = {}
    for _s in [FrameFifo]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, OpenGLFrameFifo, name, value)
    __swig_getmethods__ = {}
    for _s in [FrameFifo]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, OpenGLFrameFifo, name)
    __repr__ = _swig_repr

    def __init__(self, n_stack_720p, n_stack_1080p, n_stack_1440p, n_stack_4K, n_stack_audio):
        this = _valkka_core.new_OpenGLFrameFifo(n_stack_720p, n_stack_1080p, n_stack_1440p, n_stack_4K, n_stack_audio)
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _valkka_core.delete_OpenGLFrameFifo
    __del__ = lambda self: None
OpenGLFrameFifo_swigregister = _valkka_core.OpenGLFrameFifo_swigregister
OpenGLFrameFifo_swigregister(OpenGLFrameFifo)

class OpenGLThread(Thread):
    __swig_setmethods__ = {}
    for _s in [Thread]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, OpenGLThread, name, value)
    __swig_getmethods__ = {}
    for _s in [Thread]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, OpenGLThread, name)
    __repr__ = _swig_repr

    def __init__(self, name, n720p=0, n1080p=0, n1440p=0, n4K=0, naudio=0, msbuftime=100, core_id=-1):
        this = _valkka_core.new_OpenGLThread(name, n720p, n1080p, n1440p, n4K, naudio, msbuftime, core_id)
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _valkka_core.delete_OpenGLThread
    __del__ = lambda self: None

    def getFifo(self):
        return _valkka_core.OpenGLThread_getFifo(self)

    def createWindow(self):
        return _valkka_core.OpenGLThread_createWindow(self)

    def makeCurrent(self, window_id):
        return _valkka_core.OpenGLThread_makeCurrent(self, window_id)

    def getVsyncAtStartup(self):
        return _valkka_core.OpenGLThread_getVsyncAtStartup(self)

    def stopCall(self):
        return _valkka_core.OpenGLThread_stopCall(self)

    def infoCall(self):
        return _valkka_core.OpenGLThread_infoCall(self)

    def newRenderGroupCall(self, window_id):
        return _valkka_core.OpenGLThread_newRenderGroupCall(self, window_id)

    def delRenderGroupCall(self, window_id):
        return _valkka_core.OpenGLThread_delRenderGroupCall(self, window_id)

    def newRenderContextCall(self, slot, window_id, z):
        return _valkka_core.OpenGLThread_newRenderContextCall(self, slot, window_id, z)

    def delRenderContextCall(self, id):
        return _valkka_core.OpenGLThread_delRenderContextCall(self, id)
OpenGLThread_swigregister = _valkka_core.OpenGLThread_swigregister
OpenGLThread_swigregister(OpenGLThread)

class SharedMemRingBuffer(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SharedMemRingBuffer, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SharedMemRingBuffer, name)
    __repr__ = _swig_repr

    def __init__(self, name, n_cells, n_bytes, mstimeout=0, is_server=False):
        this = _valkka_core.new_SharedMemRingBuffer(name, n_cells, n_bytes, mstimeout, is_server)
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _valkka_core.delete_SharedMemRingBuffer
    __del__ = lambda self: None

    def getValue(self):
        return _valkka_core.SharedMemRingBuffer_getValue(self)

    def getClientState(self):
        return _valkka_core.SharedMemRingBuffer_getClientState(self)

    def clientPull(self, index_out, size_out):
        return _valkka_core.SharedMemRingBuffer_clientPull(self, index_out, size_out)
SharedMemRingBuffer_swigregister = _valkka_core.SharedMemRingBuffer_swigregister
SharedMemRingBuffer_swigregister(SharedMemRingBuffer)
cvar = _valkka_core.cvar
VERSION_MAJOR = cvar.VERSION_MAJOR
VERSION_MINOR = cvar.VERSION_MINOR
VERSION_PATCH = cvar.VERSION_PATCH

class SharedMemFrameFilter(FrameFilter):
    __swig_setmethods__ = {}
    for _s in [FrameFilter]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, SharedMemFrameFilter, name, value)
    __swig_getmethods__ = {}
    for _s in [FrameFilter]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, SharedMemFrameFilter, name)
    __repr__ = _swig_repr

    def __init__(self, name, n_cells, n_bytes, mstimeout=0):
        this = _valkka_core.new_SharedMemFrameFilter(name, n_cells, n_bytes, mstimeout)
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _valkka_core.delete_SharedMemFrameFilter
    __del__ = lambda self: None
SharedMemFrameFilter_swigregister = _valkka_core.SharedMemFrameFilter_swigregister
SharedMemFrameFilter_swigregister(SharedMemFrameFilter)


def ffmpeg_av_register_all():
    return _valkka_core.ffmpeg_av_register_all()
ffmpeg_av_register_all = _valkka_core.ffmpeg_av_register_all

def ffmpeg_av_log_set_level(level):
    return _valkka_core.ffmpeg_av_log_set_level(level)
ffmpeg_av_log_set_level = _valkka_core.ffmpeg_av_log_set_level

def crazy_log_all():
    return _valkka_core.crazy_log_all()
crazy_log_all = _valkka_core.crazy_log_all

def debug_log_all():
    return _valkka_core.debug_log_all()
debug_log_all = _valkka_core.debug_log_all

def normal_log_all():
    return _valkka_core.normal_log_all()
normal_log_all = _valkka_core.normal_log_all

def fatal_log_all():
    return _valkka_core.fatal_log_all()
fatal_log_all = _valkka_core.fatal_log_all
class FileContext(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, FileContext, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, FileContext, name)
    __repr__ = _swig_repr
    __swig_setmethods__["filename"] = _valkka_core.FileContext_filename_set
    __swig_getmethods__["filename"] = _valkka_core.FileContext_filename_get
    if _newclass:
        filename = _swig_property(_valkka_core.FileContext_filename_get, _valkka_core.FileContext_filename_set)
    __swig_setmethods__["slot"] = _valkka_core.FileContext_slot_set
    __swig_getmethods__["slot"] = _valkka_core.FileContext_slot_get
    if _newclass:
        slot = _swig_property(_valkka_core.FileContext_slot_get, _valkka_core.FileContext_slot_set)
    __swig_setmethods__["framefilter"] = _valkka_core.FileContext_framefilter_set
    __swig_getmethods__["framefilter"] = _valkka_core.FileContext_framefilter_get
    if _newclass:
        framefilter = _swig_property(_valkka_core.FileContext_framefilter_get, _valkka_core.FileContext_framefilter_set)
    __swig_setmethods__["seektime_"] = _valkka_core.FileContext_seektime__set
    __swig_getmethods__["seektime_"] = _valkka_core.FileContext_seektime__get
    if _newclass:
        seektime_ = _swig_property(_valkka_core.FileContext_seektime__get, _valkka_core.FileContext_seektime__set)
    __swig_setmethods__["duration"] = _valkka_core.FileContext_duration_set
    __swig_getmethods__["duration"] = _valkka_core.FileContext_duration_get
    if _newclass:
        duration = _swig_property(_valkka_core.FileContext_duration_get, _valkka_core.FileContext_duration_set)
    __swig_setmethods__["mstimestamp"] = _valkka_core.FileContext_mstimestamp_set
    __swig_getmethods__["mstimestamp"] = _valkka_core.FileContext_mstimestamp_get
    if _newclass:
        mstimestamp = _swig_property(_valkka_core.FileContext_mstimestamp_get, _valkka_core.FileContext_mstimestamp_set)
    __swig_setmethods__["status"] = _valkka_core.FileContext_status_set
    __swig_getmethods__["status"] = _valkka_core.FileContext_status_get
    if _newclass:
        status = _swig_property(_valkka_core.FileContext_status_get, _valkka_core.FileContext_status_set)

    def __init__(self):
        this = _valkka_core.new_FileContext()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _valkka_core.delete_FileContext
    __del__ = lambda self: None
FileContext_swigregister = _valkka_core.FileContext_swigregister
FileContext_swigregister(FileContext)

class FileThread(Thread):
    __swig_setmethods__ = {}
    for _s in [Thread]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, FileThread, name, value)
    __swig_getmethods__ = {}
    for _s in [Thread]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, FileThread, name)
    __repr__ = _swig_repr

    def __init__(self, name, core_id=-1):
        this = _valkka_core.new_FileThread(name, core_id)
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _valkka_core.delete_FileThread
    __del__ = lambda self: None

    def closeFileStreamCall(self, file_ctx):
        return _valkka_core.FileThread_closeFileStreamCall(self, file_ctx)

    def openFileStreamCall(self, file_ctx):
        return _valkka_core.FileThread_openFileStreamCall(self, file_ctx)

    def seekFileStreamCall(self, file_ctx):
        return _valkka_core.FileThread_seekFileStreamCall(self, file_ctx)

    def playFileStreamCall(self, file_ctx):
        return _valkka_core.FileThread_playFileStreamCall(self, file_ctx)

    def stopFileStreamCall(self, file_ctx):
        return _valkka_core.FileThread_stopFileStreamCall(self, file_ctx)

    def stopCall(self):
        return _valkka_core.FileThread_stopCall(self)
FileThread_swigregister = _valkka_core.FileThread_swigregister
FileThread_swigregister(FileThread)

# This file is compatible with both classic and new-style classes.



digraph "Stream::Stream"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node0 [label="Stream::Stream",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node0 -> Node1 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 [label="BufferSource::handleFrame",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classBufferSource.html#a04cb4018658d080aec540054e5936761",tooltip="Copies a Frame from BufferSource::fifo into BufferSource::internal_fifo. Sets BufferSource::active. Checks that FrameClass is FrameClass::basic. "];
  Node1 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="FrameFifo::recycle",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classFrameFifo.html#a09f514fe06c5e737cd74691f8b5d9d52",tooltip="Like FrameFifo::recycle_ but with mutex protection. "];
  Node2 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="FrameFifo::recycle_",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classFrameFifo.html#a5cd4bd7b55780c158d7ee8beeb99cfc2",tooltip="Return Frame f back into the stack. Update target_size if necessary. "];
  Node1 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="BufferSource::doGetNextFrame",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classBufferSource.html#a796bc84e5233c21c379a57f2a3b65e54",tooltip="All the fun happens here. "];
  Node4 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="BasicFrame::dumpPayload",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classBasicFrame.html#a81f5614e82427d1dcc1bd31fd6258f9f",tooltip="Dumps internal payload data. "];
}
